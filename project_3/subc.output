Terminals unused in grammar

   EQUOPG


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' open_func_param_scope ')'
   16          | type_specifier pointers ID '(' open_func_param_scope VOID ')'
   17          | type_specifier pointers ID '(' open_func_param_scope param_list ')'

   18 open_func_param_scope: %empty

   19 pointers: '*'
   20         | %empty

   21 param_list: param_decl
   22           | param_list ',' param_decl

   23 param_decl: type_specifier pointers ID
   24           | type_specifier pointers ID '[' const_expr ']'

   25 def_list: def_list def
   26         | %empty

   27 def: type_specifier pointers ID ';'
   28    | type_specifier pointers ID '[' const_expr ']' ';'
   29    | type_specifier ';'
   30    | func_decl ';'

   31 compound_stmt: '{' local_defs stmt_list '}'

   32 local_defs: def_list

   33 stmt_list: stmt_list stmt
   34          | %empty

   35 stmt: expr ';'
   36     | compound_stmt
   37     | RETURN ';'
   38     | RETURN expr ';'
   39     | ';'
   40     | IF '(' expr ')' stmt
   41     | IF '(' expr ')' stmt ELSE stmt
   42     | WHILE '(' expr ')' stmt
   43     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   44     | BREAK ';'
   45     | CONTINUE ';'

   46 expr_e: expr
   47       | %empty

   48 const_expr: expr

   49 expr: unary '=' expr
   50     | or_expr

   51 or_expr: or_list

   52 or_list: or_list LOGICAL_OR and_expr
   53        | and_expr

   54 and_expr: and_list

   55 and_list: and_list LOGICAL_AND binary
   56         | binary

   57 binary: binary RELOP binary
   58       | binary EQUOP binary
   59       | binary '+' binary
   60       | binary '-' binary
   61       | unary

   62 unary: '(' expr ')'
   63      | '(' unary ')'
   64      | INTEGER_CONST
   65      | CHAR_CONST
   66      | ID
   67      | STRING
   68      | '-' unary
   69      | '!' unary
   70      | unary INCOP
   71      | unary DECOP
   72      | INCOP unary
   73      | DECOP unary
   74      | '&' unary
   75      | '*' unary
   76      | unary '[' expr ']'
   77      | unary '.' ID
   78      | unary STRUCTOP ID
   79      | unary '(' args ')'
   80      | unary '(' ')'

   81 args: expr
   82     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 69
'&' (38) 74
'(' (40) 15 16 17 40 41 42 43 62 63 79 80
')' (41) 15 16 17 40 41 42 43 62 63 79 80
'*' (42) 19 75
'+' (43) 59
',' (44) 22 82
'-' (45) 60 68
'.' (46) 77
';' (59) 4 5 6 7 27 28 29 30 35 37 38 39 43 44 45
'=' (61) 49
'[' (91) 5 24 28 76
']' (93) 5 24 28 76
'{' (123) 13 31
'}' (125) 13 31
error (256)
LOGICAL_OR (258) 52
LOGICAL_AND (259) 55
EQUOP (260) 58
RELOP (261) 57
INCOP (262) 70 72
DECOP (263) 71 73
STRUCTOP (264) 78
IF (265) 40 41
ELSE (266) 41
VOID (267) 10 16
STRUCT (268) 13 14
RETURN (269) 37 38
WHILE (270) 42
FOR (271) 43
BREAK (272) 44
CONTINUE (273) 45
ID (274) 4 5 13 14 15 16 17 23 24 27 28 66 77 78
CHAR_CONST (275) 65
STRING (276) 67
EQUOPG (277)
INTEGER_CONST (278) 64
TYPE (279) 9


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 8, on right: 2
type_specifier (44)
    on left: 9 10 11, on right: 4 5 7 15 16 17 23 24 27 28 29
struct_specifier (45)
    on left: 13 14, on right: 11
$@1 (46)
    on left: 12, on right: 13
func_decl (47)
    on left: 15 16 17, on right: 6 8 30
open_func_param_scope (48)
    on left: 18, on right: 15 16 17
pointers (49)
    on left: 19 20, on right: 4 5 15 16 17 23 24 27 28
param_list (50)
    on left: 21 22, on right: 17 22
param_decl (51)
    on left: 23 24, on right: 21 22
def_list (52)
    on left: 25 26, on right: 13 25 32
def (53)
    on left: 27 28 29 30, on right: 25
compound_stmt (54)
    on left: 31, on right: 8 36
local_defs (55)
    on left: 32, on right: 31
stmt_list (56)
    on left: 33 34, on right: 31 33
stmt (57)
    on left: 35 36 37 38 39 40 41 42 43 44 45, on right: 33 40 41 42
    43
expr_e (58)
    on left: 46 47, on right: 43
const_expr (59)
    on left: 48, on right: 5 24 28
expr (60)
    on left: 49 50, on right: 35 38 40 41 42 46 48 49 62 76 81 82
or_expr (61)
    on left: 51, on right: 50
or_list (62)
    on left: 52 53, on right: 51 52
and_expr (63)
    on left: 54, on right: 52 53
and_list (64)
    on left: 55 56, on right: 54 55
binary (65)
    on left: 57 58 59 60 61, on right: 55 56 57 58 59 60
unary (66)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80, on right: 49 61 63 68 69 70 71 72 73 74 75 76 77 78 79 80
args (67)
    on left: 81 82, on right: 79 82


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 5

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 6

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' open_func_param_scope ')'
   16          | type_specifier . pointers ID '(' open_func_param_scope VOID ')'
   17          | type_specifier . pointers ID '(' open_func_param_scope param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 20 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 14 (struct_specifier)


State 12

   19 pointers: '*' .

    $default  reduce using rule 19 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' open_func_param_scope ')'
   16          | type_specifier pointers . ID '(' open_func_param_scope VOID ')'
   17          | type_specifier pointers . ID '(' open_func_param_scope param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   31 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 20
    local_defs  go to state 21


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 22


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' open_func_param_scope ')'
   16          | type_specifier pointers ID . '(' open_func_param_scope VOID ')'
   17          | type_specifier pointers ID . '(' open_func_param_scope param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 20

   25 def_list: def_list . def
   32 local_defs: def_list .

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    $default  reduce using rule 32 (local_defs)

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 21

   31 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 34 (stmt_list)

    stmt_list  go to state 29


State 22

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 26 (def_list)

    def_list  go to state 30


State 23

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    const_expr  go to state 42
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 24

   15 func_decl: type_specifier pointers ID '(' . open_func_param_scope ')'
   16          | type_specifier pointers ID '(' . open_func_param_scope VOID ')'
   17          | type_specifier pointers ID '(' . open_func_param_scope param_list ')'

    $default  reduce using rule 18 (open_func_param_scope)

    open_func_param_scope  go to state 50


State 25

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 26

   15 func_decl: type_specifier . pointers ID '(' open_func_param_scope ')'
   16          | type_specifier . pointers ID '(' open_func_param_scope VOID ')'
   17          | type_specifier . pointers ID '(' open_func_param_scope param_list ')'
   27 def: type_specifier . pointers ID ';'
   28    | type_specifier . pointers ID '[' const_expr ']' ';'
   29    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 51

    $default  reduce using rule 20 (pointers)

    pointers  go to state 52


State 27

   30 def: func_decl . ';'

    ';'  shift, and go to state 53


State 28

   25 def_list: def_list def .

    $default  reduce using rule 25 (def_list)


State 29

   31 compound_stmt: '{' local_defs stmt_list . '}'
   33 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    IF             shift, and go to state 54
    RETURN         shift, and go to state 55
    WHILE          shift, and go to state 56
    FOR            shift, and go to state 57
    BREAK          shift, and go to state 58
    CONTINUE       shift, and go to state 59
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 60
    '{'            shift, and go to state 16
    '}'            shift, and go to state 61

    compound_stmt  go to state 62
    stmt           go to state 63
    expr           go to state 64
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 30

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   25 def_list: def_list . def

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6
    '}'     shift, and go to state 65

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 31

   74 unary: '&' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 66


State 32

   68 unary: '-' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 67


State 33

   75 unary: '*' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 68


State 34

   69 unary: '!' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 69


State 35

   72 unary: INCOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 70


State 36

   73 unary: DECOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 71


State 37

   62 unary: '(' . expr ')'
   63      | '(' . unary ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 72
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 73


State 38

   66 unary: ID .

    $default  reduce using rule 66 (unary)


State 39

   65 unary: CHAR_CONST .

    $default  reduce using rule 65 (unary)


State 40

   67 unary: STRING .

    $default  reduce using rule 67 (unary)


State 41

   64 unary: INTEGER_CONST .

    $default  reduce using rule 64 (unary)


State 42

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 74


State 43

   48 const_expr: expr .

    $default  reduce using rule 48 (const_expr)


State 44

   50 expr: or_expr .

    $default  reduce using rule 50 (expr)


State 45

   51 or_expr: or_list .
   52 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 75

    $default  reduce using rule 51 (or_expr)


State 46

   53 or_list: and_expr .

    $default  reduce using rule 53 (or_list)


State 47

   54 and_expr: and_list .
   55 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 76

    $default  reduce using rule 54 (and_expr)


State 48

   56 and_list: binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    EQUOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    '+'    shift, and go to state 79
    '-'    shift, and go to state 80

    $default  reduce using rule 56 (and_list)


State 49

   49 expr: unary . '=' expr
   61 binary: unary .
   70 unary: unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    '='       shift, and go to state 81
    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 61 (binary)


State 50

   15 func_decl: type_specifier pointers ID '(' open_func_param_scope . ')'
   16          | type_specifier pointers ID '(' open_func_param_scope . VOID ')'
   17          | type_specifier pointers ID '(' open_func_param_scope . param_list ')'

    ')'     shift, and go to state 88
    VOID    shift, and go to state 89
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    type_specifier    go to state 90
    struct_specifier  go to state 9
    param_list        go to state 91
    param_decl        go to state 92


State 51

   29 def: type_specifier ';' .

    $default  reduce using rule 29 (def)


State 52

   15 func_decl: type_specifier pointers . ID '(' open_func_param_scope ')'
   16          | type_specifier pointers . ID '(' open_func_param_scope VOID ')'
   17          | type_specifier pointers . ID '(' open_func_param_scope param_list ')'
   27 def: type_specifier pointers . ID ';'
   28    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 93


State 53

   30 def: func_decl ';' .

    $default  reduce using rule 30 (def)


State 54

   40 stmt: IF . '(' expr ')' stmt
   41     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 94


State 55

   37 stmt: RETURN . ';'
   38     | RETURN . expr ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 95

    expr      go to state 96
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 56

   42 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 97


State 57

   43 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 98


State 58

   44 stmt: BREAK . ';'

    ';'  shift, and go to state 99


State 59

   45 stmt: CONTINUE . ';'

    ';'  shift, and go to state 100


State 60

   39 stmt: ';' .

    $default  reduce using rule 39 (stmt)


State 61

   31 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 31 (compound_stmt)


State 62

   36 stmt: compound_stmt .

    $default  reduce using rule 36 (stmt)


State 63

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 64

   35 stmt: expr . ';'

    ';'  shift, and go to state 101


State 65

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 66

   70 unary: unary . INCOP
   71      | unary . DECOP
   74      | '&' unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 74 (unary)


State 67

   68 unary: '-' unary .
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 68 (unary)


State 68

   70 unary: unary . INCOP
   71      | unary . DECOP
   75      | '*' unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 75 (unary)


State 69

   69 unary: '!' unary .
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 69 (unary)


State 70

   70 unary: unary . INCOP
   71      | unary . DECOP
   72      | INCOP unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 72 (unary)


State 71

   70 unary: unary . INCOP
   71      | unary . DECOP
   73      | DECOP unary .
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 73 (unary)


State 72

   62 unary: '(' expr . ')'

    ')'  shift, and go to state 102


State 73

   49 expr: unary . '=' expr
   61 binary: unary .
   63 unary: '(' unary . ')'
   70      | unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    '='       shift, and go to state 81
    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    ')'       shift, and go to state 103
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 61 (binary)


State 74

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 104


State 75

   52 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    and_expr  go to state 105
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 106


State 76

   55 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 107
    unary   go to state 106


State 77

   58 binary: binary EQUOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 108
    unary   go to state 106


State 78

   57 binary: binary RELOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 109
    unary   go to state 106


State 79

   59 binary: binary '+' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 110
    unary   go to state 106


State 80

   60 binary: binary '-' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 111
    unary   go to state 106


State 81

   49 expr: unary '=' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 112
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 82

   70 unary: unary INCOP .

    $default  reduce using rule 70 (unary)


State 83

   71 unary: unary DECOP .

    $default  reduce using rule 71 (unary)


State 84

   76 unary: unary '[' . expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 113
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 85

   79 unary: unary '(' . args ')'
   80      | unary '(' . ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    ')'            shift, and go to state 114
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 115
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49
    args      go to state 116


State 86

   77 unary: unary '.' . ID

    ID  shift, and go to state 117


State 87

   78 unary: unary STRUCTOP . ID

    ID  shift, and go to state 118


State 88

   15 func_decl: type_specifier pointers ID '(' open_func_param_scope ')' .

    $default  reduce using rule 15 (func_decl)


State 89

   10 type_specifier: VOID .
   16 func_decl: type_specifier pointers ID '(' open_func_param_scope VOID . ')'

    ')'  shift, and go to state 119

    $default  reduce using rule 10 (type_specifier)


State 90

   23 param_decl: type_specifier . pointers ID
   24           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 20 (pointers)

    pointers  go to state 120


State 91

   17 func_decl: type_specifier pointers ID '(' open_func_param_scope param_list . ')'
   22 param_list: param_list . ',' param_decl

    ','  shift, and go to state 121
    ')'  shift, and go to state 122


State 92

   21 param_list: param_decl .

    $default  reduce using rule 21 (param_list)


State 93

   15 func_decl: type_specifier pointers ID . '(' open_func_param_scope ')'
   16          | type_specifier pointers ID . '(' open_func_param_scope VOID ')'
   17          | type_specifier pointers ID . '(' open_func_param_scope param_list ')'
   27 def: type_specifier pointers ID . ';'
   28    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 123
    '('  shift, and go to state 24
    ';'  shift, and go to state 124


State 94

   40 stmt: IF '(' . expr ')' stmt
   41     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 125
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 95

   37 stmt: RETURN ';' .

    $default  reduce using rule 37 (stmt)


State 96

   38 stmt: RETURN expr . ';'

    ';'  shift, and go to state 126


State 97

   42 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 127
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 98

   43 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 128
    expr      go to state 129
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 99

   44 stmt: BREAK ';' .

    $default  reduce using rule 44 (stmt)


State 100

   45 stmt: CONTINUE ';' .

    $default  reduce using rule 45 (stmt)


State 101

   35 stmt: expr ';' .

    $default  reduce using rule 35 (stmt)


State 102

   62 unary: '(' expr ')' .

    $default  reduce using rule 62 (unary)


State 103

   63 unary: '(' unary ')' .

    $default  reduce using rule 63 (unary)


State 104

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 105

   52 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 52 (or_list)


State 106

   61 binary: unary .
   70 unary: unary . INCOP
   71      | unary . DECOP
   76      | unary . '[' expr ']'
   77      | unary . '.' ID
   78      | unary . STRUCTOP ID
   79      | unary . '(' args ')'
   80      | unary . '(' ')'

    INCOP     shift, and go to state 82
    DECOP     shift, and go to state 83
    '['       shift, and go to state 84
    '('       shift, and go to state 85
    '.'       shift, and go to state 86
    STRUCTOP  shift, and go to state 87

    $default  reduce using rule 61 (binary)


State 107

   55 and_list: and_list LOGICAL_AND binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    EQUOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    '+'    shift, and go to state 79
    '-'    shift, and go to state 80

    $default  reduce using rule 55 (and_list)


State 108

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   58       | binary EQUOP binary .
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 78
    '+'    shift, and go to state 79
    '-'    shift, and go to state 80

    $default  reduce using rule 58 (binary)


State 109

   57 binary: binary . RELOP binary
   57       | binary RELOP binary .
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80

    $default  reduce using rule 57 (binary)


State 110

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   59       | binary '+' binary .
   60       | binary . '-' binary

    $default  reduce using rule 59 (binary)


State 111

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary
   60       | binary '-' binary .

    $default  reduce using rule 60 (binary)


State 112

   49 expr: unary '=' expr .

    $default  reduce using rule 49 (expr)


State 113

   76 unary: unary '[' expr . ']'

    ']'  shift, and go to state 130


State 114

   80 unary: unary '(' ')' .

    $default  reduce using rule 80 (unary)


State 115

   81 args: expr .

    $default  reduce using rule 81 (args)


State 116

   79 unary: unary '(' args . ')'
   82 args: args . ',' expr

    ','  shift, and go to state 131
    ')'  shift, and go to state 132


State 117

   77 unary: unary '.' ID .

    $default  reduce using rule 77 (unary)


State 118

   78 unary: unary STRUCTOP ID .

    $default  reduce using rule 78 (unary)


State 119

   16 func_decl: type_specifier pointers ID '(' open_func_param_scope VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 120

   23 param_decl: type_specifier pointers . ID
   24           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 133


State 121

   22 param_list: param_list ',' . param_decl

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    type_specifier    go to state 90
    struct_specifier  go to state 9
    param_decl        go to state 134


State 122

   17 func_decl: type_specifier pointers ID '(' open_func_param_scope param_list ')' .

    $default  reduce using rule 17 (func_decl)


State 123

   28 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    const_expr  go to state 135
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 124

   27 def: type_specifier pointers ID ';' .

    $default  reduce using rule 27 (def)


State 125

   40 stmt: IF '(' expr . ')' stmt
   41     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 136


State 126

   38 stmt: RETURN expr ';' .

    $default  reduce using rule 38 (stmt)


State 127

   42 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 137


State 128

   43 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 138


State 129

   46 expr_e: expr .

    $default  reduce using rule 46 (expr_e)


State 130

   76 unary: unary '[' expr ']' .

    $default  reduce using rule 76 (unary)


State 131

   82 args: args ',' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 139
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 132

   79 unary: unary '(' args ')' .

    $default  reduce using rule 79 (unary)


State 133

   23 param_decl: type_specifier pointers ID .
   24           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 140

    $default  reduce using rule 23 (param_decl)


State 134

   22 param_list: param_list ',' param_decl .

    $default  reduce using rule 22 (param_list)


State 135

   28 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 141


State 136

   40 stmt: IF '(' expr ')' . stmt
   41     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    IF             shift, and go to state 54
    RETURN         shift, and go to state 55
    WHILE          shift, and go to state 56
    FOR            shift, and go to state 57
    BREAK          shift, and go to state 58
    CONTINUE       shift, and go to state 59
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 60
    '{'            shift, and go to state 16

    compound_stmt  go to state 62
    stmt           go to state 142
    expr           go to state 64
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 137

   42 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    IF             shift, and go to state 54
    RETURN         shift, and go to state 55
    WHILE          shift, and go to state 56
    FOR            shift, and go to state 57
    BREAK          shift, and go to state 58
    CONTINUE       shift, and go to state 59
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 60
    '{'            shift, and go to state 16

    compound_stmt  go to state 62
    stmt           go to state 143
    expr           go to state 64
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 138

   43 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 144
    expr      go to state 129
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 139

   82 args: args ',' expr .

    $default  reduce using rule 82 (args)


State 140

   24 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    const_expr  go to state 145
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 141

   28 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 146


State 142

   40 stmt: IF '(' expr ')' stmt .
   41     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 147

    $default  reduce using rule 40 (stmt)


State 143

   42 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 42 (stmt)


State 144

   43 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 148


State 145

   24 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 149


State 146

   28 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 28 (def)


State 147

   41 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    IF             shift, and go to state 54
    RETURN         shift, and go to state 55
    WHILE          shift, and go to state 56
    FOR            shift, and go to state 57
    BREAK          shift, and go to state 58
    CONTINUE       shift, and go to state 59
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 60
    '{'            shift, and go to state 16

    compound_stmt  go to state 62
    stmt           go to state 150
    expr           go to state 64
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 148

   43 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 151
    expr      go to state 129
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 149

   24 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 24 (param_decl)


State 150

   41 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 41 (stmt)


State 151

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 152


State 152

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    IF             shift, and go to state 54
    RETURN         shift, and go to state 55
    WHILE          shift, and go to state 56
    FOR            shift, and go to state 57
    BREAK          shift, and go to state 58
    CONTINUE       shift, and go to state 59
    ID             shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    STRING         shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 60
    '{'            shift, and go to state 16

    compound_stmt  go to state 62
    stmt           go to state 153
    expr           go to state 64
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 153

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 43 (stmt)
